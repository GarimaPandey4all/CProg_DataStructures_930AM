Analysis of Algorithms:

Analysis of Algorithms is the determination of the amount of time and space resource required to execute it. Usually, the efficiency or running time of an algorithm is stated as a function relating the input length to the number of steps, known as time complexity or volume of memory known as space complexity.

Asymptotic Analysis of Algorithms:

Refers defining the mathematical boundation/framing of its runtime performance. Evaluate the performance of an algorithm in terms of input size.

Linear and Constant Complexity

Analysis Types:

1. Best case
2. Average Case
3. Worst Case

Asymptotic Notation:

1. Big O: worst case : Upper bound
2. Big - Omega: best case : Lower bound
3. small - o: worst case : Upper bound
4. Small - omega(w) : best case : Lower bound
5. Theta : average case

Algorithm 					Time Complexity
							Best			Average				Worst
1. Selection Sort		Big Omega(n^2)		Theta(n^2)			O(n^2)

2. Bubble Sort			Big Omega (n)		Theta(n ^ 2)		O(n^2)

3. Insertion Sort		Big Omega (n)		Theta (n^2)			O(n^2)

4. Heap Sort			Big Omega (nLog(n))	Theta(nlog(n))		O(nlog(n))

5. Quick Sort			Big Omega (nlog(n)) Theta(nlog(n))		O(n ^ 2)

6. Merge Sort			Big Omega (nlog(n))	Theta(nlog(n))		O(nlog(n))








